package com.example.demo.util;

import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

import com.example.demo.entity.Userentity;

public class FieldUtil<T> {

	public static String getFields(Object usr) {
		Class clazz = usr.getClass();
		
		Userentity obj = (Userentity) usr;
		Method[] method = obj.getClass().getDeclaredMethods();
		
		for(Method singleResultObjectClassfieldsfield : method) {
			singleResultObjectClassfieldsfield.setAccessible(true);
	  }
			for(int i=0; i<method.length; i++) {
				String mthod = method[i].toString();
	             switch(mthod) { 
				
				case "setName": return obj.getName();
				 
				case "setAddress": return obj.getAddress(); 
				
				default:System.out.println("Not Found");
	              }
			}
			
			//}
		return "";
	}
	
	public static Class<?> getField(Object u) {
		Userentity obj = (Userentity) u;
		return obj.getClass();
	}
	
	public static void main(String []arr) {
		Userentity u = new Userentity();
		u.setAddress("abc");
		u.setName("xyz");
		System.out.println(FieldUtil.getFields(u));
	}
}
